
buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    mavenCentral()
}

dependencies {

    implementation fileTree(dir: "libs",include:['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha1'
    implementation 'com.google.android.material:material:1.0.0-beta01'
    implementation files('libs/trilateration-1.0.2.jar')
    implementation files('libs/commons-math3-3.6.1.jar')
    implementation files('libs/AMap_Location_V5.6.1_20211115.jar')
    implementation files('libs/Msc.jar')


}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 28
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
            jniLibs.srcDirs = ['libs']

        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
